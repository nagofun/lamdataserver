# Generated by Django 2.2 on 2020-05-01 11:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('LAMProcessData', '0069_auto_20200423_0109'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefectPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(upload_to='./media/DefectPicture/', verbose_name='缺陷照片')),
            ],
        ),
        migrations.CreateModel(
            name='LAMProductSubarea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subarea_name', models.CharField(max_length=20)),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAMProductCategory')),
            ],
        ),
        migrations.CreateModel(
            name='MachiningState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machiningstate_name', models.CharField(max_length=30, unique=True)),
                ('available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MTDefectInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(choices=[('Single', '单个缺陷'), ('Group', '成组缺陷')], max_length=10, verbose_name='荧光缺陷类别')),
                ('X_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标X')),
                ('Y_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Y')),
                ('Z_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Z')),
                ('photos', models.ManyToManyField(related_name='DefectPicture_MTDefectInfo', to='LAMProcessData.DefectPicture')),
                ('product_subarea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAMProductSubarea', verbose_name='缺陷所在分区')),
            ],
        ),
        migrations.CreateModel(
            name='UTDefectInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(choices=[('Single', '单个不连续性指示'), ('Multiple', '多个不连续性指示'), ('Strip', '长条不连续性指示'), ('Noise', '噪声')], max_length=10, verbose_name='超声缺陷类别')),
                ('equivalent_hole_diameter', models.FloatField(blank=True, null=True, verbose_name='当量平底孔直径')),
                ('radiation_equivalent', models.IntegerField(blank=True, null=True, verbose_name='辐射当量(db)')),
                ('X_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标X')),
                ('Y_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Y')),
                ('Z_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Z')),
                ('photos', models.ManyToManyField(related_name='DefectPicture_UTDefectInfo', to='LAMProcessData.DefectPicture')),
                ('product_subarea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAMProductSubarea', verbose_name='缺陷所在分区')),
            ],
        ),
        migrations.CreateModel(
            name='RTDefectInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(choices=[('Single', '单个缺陷'), ('Group', '成组缺陷')], max_length=10, verbose_name='X射线缺陷类别')),
                ('size', models.FloatField(verbose_name='缺陷大小')),
                ('X_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标X')),
                ('Y_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Y')),
                ('Z_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Z')),
                ('photos', models.ManyToManyField(related_name='DefectPicture_RTDefectInfo', to='LAMProcessData.DefectPicture')),
                ('product_subarea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAMProductSubarea', verbose_name='缺陷所在分区')),
            ],
        ),
        migrations.CreateModel(
            name='QualityReviewSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detection_date', models.DateField(null=True)),
                ('file', models.FileField(null=True, upload_to='./media/ReviewSheet/')),
                ('LAM_product', models.ManyToManyField(related_name='Product_QualityReviewSheet', to='LAMProcessData.LAMProduct')),
                ('LAM_techinst_serial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAM_TechInst_Serial')),
            ],
        ),
        migrations.CreateModel(
            name='PTDefectInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(choices=[('Single', '单个缺陷'), ('Group', '成组缺陷')], max_length=10, verbose_name='荧光缺陷类别')),
                ('X_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标X')),
                ('Y_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Y')),
                ('Z_coordinate', models.FloatField(blank=True, null=True, verbose_name='加工数模内坐标Z')),
                ('photos', models.ManyToManyField(related_name='DefectPicture_PTDefectInfo', to='LAMProcessData.DefectPicture')),
                ('product_subarea', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAMProductSubarea', verbose_name='缺陷所在分区')),
            ],
        ),
        migrations.CreateModel(
            name='NonDestructiveTest_Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrangement_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('available', models.BooleanField(default=True)),
                ('NDT_type', models.CharField(choices=[('UT', '超声波检测'), ('RT', 'X射线检测'), ('PT', '渗透检测'), ('MT', '磁粉检测')], max_length=8, verbose_name='无损检测类别')),
                ('rewelding_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='返修次数')),
                ('LAM_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAMProduct')),
                ('LAM_techinst_serial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.LAM_TechInst_Serial')),
                ('MT_defect', models.ManyToManyField(related_name='MTDefect_NDTMission', to='LAMProcessData.MTDefectInformation')),
                ('PT_defect', models.ManyToManyField(related_name='PTDefect_NDTMission', to='LAMProcessData.PTDefectInformation')),
                ('RT_defect', models.ManyToManyField(related_name='RTDefect_NDTMission', to='LAMProcessData.RTDefectInformation')),
                ('UT_defect', models.ManyToManyField(related_name='UTDefect_NDTMission', to='LAMProcessData.UTDefectInformation')),
                ('heattreatmentstate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.HeatTreatmentState')),
                ('machiningstate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.MachiningState')),
                ('quality_reviewsheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LAMProcessData.QualityReviewSheet')),
            ],
        ),
    ]
