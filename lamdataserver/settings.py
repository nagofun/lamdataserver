# -*- coding: gbk -*-

"""
Django settings for lamdataserver project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
# import logging
# from logging.handlers import TimedRotatingFileHandler

import time
# import LAMProcessData.process_realtime_finedata as RT_FineData
# from .LAMProcessData.process_realtime_finedata import *
import json


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vkt*pd7y$+c9k#*j-)u_35lraqffr_eb^(wg9smv^^06qk(ear'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['192.168.1.129','127.0.0.1']
ALLOWED_HOSTS = ['127.0.0.1']
# ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'LAMProcessData.apps.LamprocessdataConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'LAMProcessData',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lamdataserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'LAMProcessData/templates/moban1342')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
APP_PATH = os.path.dirname(os.path.dirname(__file__))
STATIC_URL = '/assets/'
TEMPLATE_DIRS = ('lamdataserver/templates/moban1342/',)
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(APP_PATH,'LAMProcessData/templates/moban1342/assets').replace('\\','/'),
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
MEDIA_BACKUP_URL = '/media/backup/'
MEDIA_LOGFLE_URL = '/media/LogFile/'
MEDIA_LASER_LOG_URL = os.path.join(MEDIA_URL, 'laserlog')
REAL_TIME_SCREEN_URL = os.path.join(MEDIA_URL, 'realtime')

WSGI_APPLICATION = 'lamdataserver.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'lamdataserver',
        'USER':'root',
        'PASSWORD':'chenbo',
        'HOST':'127.0.0.1',
        'PORT':'3306'
    }
}

# localhost
CACHES = {
    'default':
        {
            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
            'LOCATION': ['127.0.0.1:11211',]
        }
}
# ――――――――――――――――
# 版权声明：本文为CSDN博主「大江狗」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
# 原文链接：https://blog.csdn.net/weixin_42134789/article/details/81283167
# https://www.cnblogs.com/rexyan/p/6445006.html



# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-Hans'


TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/assets/'
LOGIN_URL = '/LAMProcessData/login/'


'''增加氧含量激光功率CNC数据采集时自动更新
http://127.0.0.1:8080/LAMProcessData/LAMProcessData/UpdateRecordCNCStatusdataIndexing/
http://127.0.0.1:8080/LAMProcessData/LAMProcessData/UpdateRecordLaserdataIndexing/
http://127.0.0.1:8080/LAMProcessData/LAMProcessData/UpdateRecordOxygendataIndexing/
http://127.0.0.1:8080/LAMProcessData/LAMProcessData/UpdateRecordTimeStamp/
http://127.0.0.1:8080/LAMProcessData/LAMProcessData/UpdateRecordCNCProcessStatus/
'''

# 更新数据库indexing表的标记 True表示正在访问，不可重复运行
GLOBAL_UPDATE_INDEXINGTABLE_FLAG_OXYGEN = False
GLOBAL_UPDATE_INDEXINGTABLE_FLAG_LASER = False
GLOBAL_UPDATE_INDEXINGTABLE_FLAG_CNCSTATUS = False

# 之前发送过图像，但没有识别，且id小于GLOBAL_CNCProcessStatus_SendImage_MAX_ID、大于GLOBAL_CNCProcessStatus_NotRecoge_Min_ID
# 此列表为空后，将发送GLOBAL_CNCProcessStatus_SendImage_MAX_ID以后的id
GLOBAL_CNCProcessStatus_SendImageBefore_Not_Recive_ITEMlist = []

# 刚刚发送过图像，等待识别，识别后将此列表的最小值更新至GLOBAL_CNCProcessStatus_NotRecoge_Min_ID
GLOBAL_CNCProcessStatus_SendImage_Waitfor_Recive_IDlist = []
# check_date不为空的最大id
GLOBAL_CNCProcessStatus_SendImage_MAX_ID=0
# if_checked=0的最小id
# select min(id) from lamdataserver.lamprocessdata_cncprocessstatus where id>1700000 and if_checked=0;
GLOBAL_CNCProcessStatus_NotRecoge_Min_ID=0






'''日志开启'''
'''-1'''
# log_file = '.' + MEDIA_LOGFLE_URL + 'LAMDataServer.log'
#
# time_handler = logging.handlers.TimedRotatingFileHandler(log_file, when='midnight', interval=1, backupCount=0)
# time_handler.suffix = '%Y-%m-%d.log'
# time_handler.setLevel('DEBUG')  # error以上的内容输出到文件里面
#
# fmt = '%(asctime)s - %(funcName)s - %(lineno)s - %(levelname)s - %(message)s'
# formatter = logging.Formatter(fmt)
# time_handler.setFormatter(formatter)
#
# logger = logging.getLogger(__name__)
# logger.setLevel('ERROR')
# logger.addHandler(time_handler)

'''-2  移至views.py'''
# logger = logging.getLogger()
# logger.setLevel(logging.DEBUG)
# time_handler = logging.handlers.TimedRotatingFileHandler('.' + MEDIA_LOGFLE_URL + 'LAMDataServer.log', when='midnight', interval=1, backupCount=0)
# fmt = '%(asctime)s - %(funcName)s - %(lineno)s - %(levelname)s - %(message)s'
# formatter = logging.Formatter(fmt)
# time_handler.setFormatter(formatter)
# logger.addHandler(time_handler)

'''-3'''
# logging.basicConfig(level=logging.DEBUG,
#                     filename='.' + MEDIA_LOGFLE_URL + time.strftime('%Y-%m-%d.log', time.localtime()),
#                     # filename='outlog.log',
#                     filemode='a',
#                     datefmt='%Y-%m-%d %a %H:%M:%S',
#                     format='%(asctime)s %(filename)s %(funcName)s %(lineno)d - %(levelname)s - %(message)s')
# logger = logging.getLogger(__name__)

ImageSectionInfo_dict={}
'''图像初步筛分用数据字典'''
with open("./ImageSectionInfo_code.json", 'r') as load_f:
    ImageSectionInfo_dict = json.load(load_f)
    pass

